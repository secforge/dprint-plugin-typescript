~~ ifStatement.useBraces: preferNone, ifStatement.nextControlFlowPosition: maintain, preferSingleLine: true ~~
== should format if-else with preferNone, preferSingleLine, and maintain ==
if (true)
  a;
else if (true)
  b;

[expect]
if (true)
    a;
else if (true)
    b;

== should handle nested conditions ==
if (condition1)
  statement1();
else if (condition2)
  statement2();
else
  statement3();

[expect]
if (condition1)
    statement1();
else if (condition2)
    statement2();
else
    statement3();

== should keep braces when multiple statements but remove for single ==
if (true) {
  a;
  b;
} else if (true) {
  c;
}

[expect]
if (true) {
    a;
    b;
} else if (true)
    c;

== should keep braces for declarations ==
if (true) {
  const x = 1;
} else if (true) {
  let y = 2;
}

[expect]
if (true) {
    const x = 1;
} else if (true) {
    let y = 2;
}

== should maintain control flow position ==
if (condition1)
  statement1();
else if (condition2)
  statement2();

[expect]
if (condition1)
    statement1();
else if (condition2)
    statement2();
